nameOverride: ""
fullnameOverride: ""

labels: {}

imagePullSecrets: []
service:
  annotations: {}
  type: ClusterIP
  ports:
    - name: node-api
      port: 9010
      protocol: TCP
      targetPort: node-api

ingress:
  annotations: {}
  enabled: false
  host: example.com

secrets:
  create: true
  blsKeyJson: |
    {}
  blsKeyPassword: ""


configs:

  operator.yaml: |
    # this sets the logger level (true = info, false = debug)
    production: true

    # ETH RPC URL
    eth_rpc_url:
    eth_ws_url:

    # If you running this using eigenlayer CLI and the provided AVS packaging structure,
    # this should be /operator_keys/bls_key.json as the host path will be asked while running
    #
    # We are using bn254 curve for bls keys
    #
    # If you are running locally using go run main.go, this should be full path to your local bls key file
    bls_private_key_store_path: /app/operator_keys/bls_key.json

    operator_ecdsa_address:

    aggregator_jsonrpc_server_ip_port_address:

    # avs node spec compliance https://eigen.nethermind.io/docs/spec/intro
    eigen_metrics_ip_port_address: localhost:9090
    enable_metrics: true
    node_api_ip_port_address: localhost:9010
    enable_node_api: true

    # EigenLayer Slasher contract address

    # This is the address of the slasher which is deployed in the anvil saved state
    avs_registry_coordinator_address:
    operator_state_retriever_address:

    operator_server_ip_port_addr: localhost:8091

    # the layer1 chain id the avs contracts in
    layer1_chain_id:

    # the layer2 chain id
    layer2_chain_id:
  genesis.json: |
    {}
  mach-config.toml: |
    ##############################################
    # Mach alerter configuration                 #
    ##############################################
    [alerter]
    # Only print the warning log if the alerter is disabled,
    # Otherwise the alerts will be sent to the Mach AVS Operator
    # Optional, default value: false
    enable = true
    # The JSONRPC endpoint of Mach AVS Operator
    url = "http://127.0.0.1:8901"

    ##############################################
    # Mach validator configuration               #
    ##############################################
    [validator]
    # Validate mode: "unsafe", "safe", "strict"
    #
    # "unsafe": Don't execute EVM, return ok directly.
    # "safe": Execute EVM ï¼Œreturn ok regardless of whether it's right or wrong.
    # "strict": Execute EVM, return the execution result.
    #
    # Optional, default value: "unsafe"
    mode = "unsafe"
    # The rate limit of rpc request
    # Optional, default value: 100ms
    rpc_rate_ms = 100

    ##############################################
    # Mach fetcher configuration                 #
    ##############################################
    [fetcher]
    # The JSONRPC endpoint of Optimism node
    url = ""
    # The interval (milliseconds) for fetching finalized/latest block of Optimism node
    # Optional, default value: 1000ms
    interval_ms = 4000

    ##############################################
    # Mach scheduler configuration               #
    ##############################################
    [scheduler]
    # The timeout waiting for verify result.
    # If it times out, the verify result will be checked again in the next tick.
    # Optional, default value: 100ms
    verify_timeout_ms = 100

    ##############################################
    # Mach prometheus configuration              #
    ##############################################
    [prometheus]
    # The TCP port of Prometheus exporter
    # Optional, default value: 9094
    port = 9094
    # The HTTP URI path for fetching Prometheus metrics
    # Optional, default value: "/metrics"
    metrics_path = "/metrics"
    # The indication if expose Prometheus exporter on all interfaces
    # true: listen address = "0.0.0.0:port"
    # false: listen address = "127.0.0.1:port"
    # Optional, default value: false
    external = true
node:
  ports:
    - containerPort: 9010
      protocol: TCP
      name: node-api
    - containerPort: 9090
      protocol: TCP
      name: metrics
  image:
    repository: public.ecr.aws/altlayer/mach-operator
    pullPolicy: Always
    tag: "latest"
  resources:
    limits:
      cpu: 4
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi
  args:
    - --config=/app/config/operator.yaml
  startupProbe:
    httpGet:
      path: /metrics
      port: 9094
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /metrics
      port: 9090
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  livenessProbe:
    httpGet:
      path: /metrics
      port: 9090
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 3
    failureThreshold: 2
    successThreshold: 1

verifier:
  ports:
    - containerPort: 9094
      protocol: TCP
      name: metrics
  resources:
    limits:
      cpu: 4
      memory: 4Gi
    requests:
      cpu: 2
      memory: 4Gi
  image:
    repository: public.ecr.aws/altlayer/mach
    pullPolicy: Always
    tag: "latest"
  args:
    - --config=/app/mach-config.toml
    - --genesis-config=/app/genesis.json
  env:
    - name: RUST_LOG
      value: "info"
  startupProbe:
    httpGet:
      path: /metrics
      port: 9094
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /metrics
      port: 9094
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3
    successThreshold: 1
  livenessProbe:
    httpGet:
      path: /metrics
      port: 9094
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 3
    failureThreshold: 2
    successThreshold: 1
nodeSelector: {}

tolerations: []

affinity: {}
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
